{"mappings":"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","sources":["packages/codemirror/evaluate/src/index.ts","packages/codemirror/evaluate/src/evaluate.ts","packages/codemirror/evaluate/src/commands.ts","packages/codemirror/evaluate/src/decoration.ts","packages/codemirror/evaluate/src/theme.ts"],"sourcesContent":["import { keymap } from \"@codemirror/view\";\nimport { Extension } from \"@codemirror/state\";\n\nimport { evalAction, evalHandler } from \"./evaluate\";\nimport { evalKeymap } from \"./commands\";\nimport { evalDecoration } from \"./decoration\";\nimport { evalTheme } from \"./theme\";\n\nexport * from \"./evaluate\";\nexport * from \"./commands\";\nexport { evalDecoration } from \"./decoration\";\nexport { evalTheme } from \"./theme\";\n\nexport function evaluation(action: evalHandler): Extension {\n  return [\n    evalAction(action),\n    evalDecoration(),\n    evalTheme,\n    keymap.of(evalKeymap),\n  ];\n}\n","import { EditorState, StateEffect } from \"@codemirror/state\";\n\nexport const evalEffect = StateEffect.define<{ from: number; to: number }>();\n\nexport type evalHandler = (code: string) => void;\n\nexport function evalAction(action: evalHandler) {\n  return EditorState.transactionExtender.of((tr) => {\n    for (let effect of tr.effects) {\n      if (effect.is(evalEffect)) {\n        let { from, to } = effect.value;\n        action(tr.newDoc.sliceString(from, to));\n      }\n    }\n\n    return null;\n  });\n}\n","import { EditorView, KeyBinding } from \"@codemirror/view\";\n\nimport { evalEffect } from \"./evaluate\";\n\nexport const evalKeymap: KeyBinding[] = [\n  { key: \"Shift-Enter\", run: evalSelection },\n  { key: \"Mod-Enter\", run: evalSelection },\n  { key: \"Shift-Enter\", run: evalLine },\n  { key: \"Mod-Enter\", run: evalBlock },\n];\n\nexport function evalSelection({ state, dispatch }: EditorView) {\n  if (state.selection.main.empty) return false;\n\n  dispatch({ effects: evalEffect.of(state.selection.main) });\n  return true;\n}\n\nexport function evalLine({ state, dispatch }: EditorView) {\n  const line = state.doc.lineAt(state.selection.main.from);\n  dispatch({ effects: evalEffect.of(line) });\n  return true;\n}\n\nexport function evalBlock({ state, dispatch }: EditorView) {\n  let { doc, selection } = state;\n  let { text, number } = state.doc.lineAt(selection.main.from);\n\n  if (text.trim().length === 0) return true;\n\n  let fromL, toL;\n  fromL = toL = number;\n\n  while (fromL > 1 && doc.line(fromL - 1).text.trim().length > 0) {\n    fromL -= 1;\n  }\n  while (toL < doc.lines && doc.line(toL + 1).text.trim().length > 0) {\n    toL += 1;\n  }\n\n  let { from } = doc.line(fromL);\n  let { to } = doc.line(toL);\n\n  dispatch({ effects: evalEffect.of({ from, to }) });\n  return true;\n}\n","import { ViewPlugin, ViewUpdate, Decoration } from \"@codemirror/view\";\nimport { Transaction } from \"@codemirror/state\";\n\nimport { evalEffect } from \"./evaluate\";\n\nexport function evalDecoration() {\n  const lifespan = 500;\n\n  return ViewPlugin.fromClass(\n    class {\n      decorations = Decoration.none;\n\n      update({ transactions }: ViewUpdate) {\n        for (let tr of transactions) {\n          this.decorations = this.decorations.map(tr.changes);\n\n          this.decorations = this.decorations.update({\n            add: tr.effects\n              .filter((e) => e.is(evalEffect) && e.value.from !== e.value.to)\n              .map(({ value: { from, to } }) =>\n                Decoration.mark({\n                  class: \"cm-evaluated\",\n                  time: tr.annotation(Transaction.time),\n                }).range(from, to)\n              ),\n            sort: true,\n            filter: (_f, _t, { spec: { time } }) => {\n              return typeof time === \"number\" && time + lifespan > Date.now();\n            },\n          });\n        }\n      }\n    },\n    { decorations: (v) => v.decorations }\n  );\n}\n","import { EditorView } from \"@codemirror/view\";\n\nexport const evalTheme = EditorView.theme({\n  \"@keyframes cm-eval-flash\": {\n    from: { backgroundColor: \"#FFFFFF\" },\n    to: { backgroundColor: \"#FFFFFF00\" },\n  },\n  \"& .cm-evaluated\": { animation: \"cm-eval-flash 0.5s\" },\n});\n"],"names":[],"version":3,"file":"index.js.map"}